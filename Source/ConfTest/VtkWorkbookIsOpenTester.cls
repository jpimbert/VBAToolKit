VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "VtkWorkbookIsOpenTester"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'---------------------------------------------------------------------------------------
' Module    : VtkWorkbookIsOpenTester
' Author    : Jean-Pierre Imbert
' Date      : 21/08/2013
' Purpose   : Test the vtkWorkbookIsOpen function
'
' Copyright 2013 Skwal-Soft (http://skwalsoft.com)
'
'   Licensed under the Apache License, Version 2.0 (the "License");
'   you may not use this file except in compliance with the License.
'   You may obtain a copy of the License at
'
'       http://www.apache.org/licenses/LICENSE-2.0
'
'   Unless required by applicable law or agreed to in writing, software
'   distributed under the License is distributed on an "AS IS" BASIS,
'   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
'   See the License for the specific language governing permissions and
'   limitations under the License.
'---------------------------------------------------------------------------------------

Option Explicit

Implements ITest
Implements ITestCase

Private mManager As TestCaseManager
Private mAssert As IAssert

Private Sub Class_Initialize()
    Set mManager = New TestCaseManager
End Sub

Private Property Get ITestCase_Manager() As TestCaseManager
    Set ITestCase_Manager = mManager
End Property

Private Property Get ITest_Manager() As ITestManager
    Set ITest_Manager = mManager
End Property

Private Sub ITestCase_SetUp(Assert As IAssert)
  Set mAssert = Assert
      'create xlsm file
      On Error Resume Next
      Dim wb As Workbook
      Set wb = Workbooks.Add
      'Save created project with xlsm extention
      wb.SaveAs fileName:=(vtkTestPath & "\" & vtkTestProjectName & "_test"), FileFormat:=(52) '52 is xlsm format
End Sub

Private Sub ITestCase_TearDown()
    On Error Resume Next
    'Close Created WorkBook
    Workbooks(vtkTestProjectName & "_test" & ".xlsm").Close
    'Delete Created WorkBook
    Kill vtkTestPath & "\" & vtkTestProjectName & "_test" & ".xlsm"
  '  Application.DisplayAlerts = True
End Sub

Public Sub TestVBAToolKitWorkbookIsOpen()
'we will test the function on the current project , vbaToolkit
    mAssert.Equals VtkWorkbookIsOpen("VBAToolKit_DEV.xlsm"), True, "the source workbook must be open"
End Sub

Public Sub TestCreatedWorkBookIsOpen()
Dim returnvalue As Long
'in this function we will
'/open  the test workbook ,/make a test
Application.Workbooks.Open (vtkTestPath & "\" & vtkTestProjectName & "_test" & ".xlsm")
mAssert.Equals VtkWorkbookIsOpen(vtkTestProjectName & "_test" & ".xlsm"), True, vtkTestProjectName & "_test" & "  must be open"
End Sub

Public Sub TestCreatedWorkBookIsclosed()
Dim returnvalue As Long
'in this function we will
'/ close workbook ,/ make a test
Workbooks(vtkTestProjectName & "_test" & ".xlsm").Close
mAssert.Equals VtkWorkbookIsOpen(vtkTestProjectName & "_test" & ".xlsm"), False, vtkTestProjectName & " must be Closed"
End Sub

Private Function ITest_Suite() As TestSuite
    Set ITest_Suite = New TestSuite
    ITest_Suite.AddTest ITest_Manager.ClassName, "TestVBAToolKitWorkbookIsOpen"
    ITest_Suite.AddTest ITest_Manager.ClassName, "TestCreatedWorkBookIsOpen"
    ITest_Suite.AddTest ITest_Manager.ClassName, "TestCreatedWorkBookIsclosed"
End Function

Private Sub ITestCase_RunTest()
    Select Case mManager.methodName
        Case "TestVBAToolKitWorkbookIsOpen": TestVBAToolKitWorkbookIsOpen
        Case "TestCreatedWorkBookIsOpen": TestCreatedWorkBookIsOpen
        Case "TestCreatedWorkBookIsclosed": TestCreatedWorkBookIsclosed
        Case Else: mAssert.Should False, "Invalid test name: " & mManager.methodName
    End Select
End Sub


